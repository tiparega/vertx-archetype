#set( $symbol_dollar = '$' )
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>${groupId}</groupId>
	<artifactId>${artifactId}</artifactId>
	<version>${version}</version>
	<name>${artifactId}</name>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.target>15</maven.compiler.target>
		<maven.compiler.source>15</maven.compiler.source>
		<vertx.version>${vertxVersion}</vertx.version>
		<lombok.version>1.18.20</lombok.version>
		<micrometer.version>1.7.4</micrometer.version>
		<log4j.version>2.14.1</log4j.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-core</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		<dependency><!-- TODO: Check if it can build beans, if not, may be combine 
				with openApi plugin -->
			<groupId>io.vertx</groupId>
			<artifactId>vertx-web-openapi</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		<dependency><!-- TODO: if maybe -->
			<groupId>io.vertx</groupId>
			<artifactId>vertx-auth-jwt</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		#if (${mongodb} == 'true' || ${mongodb} == 'yes' || ${mongodb} == 'y')
		<dependency><!-- TODO -->
			<groupId>io.vertx</groupId>
			<artifactId>vertx-mongo-client</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-mongodb</artifactId>
			<version>2.14.1</version>
		</dependency>
		#end
		#if (${redis} == 'true' || ${redis} == 'yes' || ${redis} == 'y')
		<dependency><!-- TODO -->
			<groupId>io.vertx</groupId>
			<artifactId>vertx-redis-client</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		#end
		#if (${springConfigServer} == 'true' || ${springConfigServer} == 'yes' || ${springConfigServer} == 'y')
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-config-spring-config-server</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		#end
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-micrometer-metrics</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.micrometer</groupId>
			<artifactId>micrometer-registry-prometheus</artifactId>
			<version>${symbol_dollar}{micrometer.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-health-check</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-config</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>io.vertx</groupId>
			<artifactId>vertx-config-yaml</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		<dependency><!-- TODO -->
			<groupId>io.vertx</groupId>
			<artifactId>vertx-circuit-breaker</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		<dependency><!-- TODO: USE THIS -->
			<groupId>io.vertx</groupId>
			<artifactId>vertx-rx-java2</artifactId>
			<version>${symbol_dollar}{vertx.version}</version>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${symbol_dollar}{lombok.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
			<version>${symbol_dollar}{log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
			<version>${symbol_dollar}{log4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-layout-template-json</artifactId>
			<version>${symbol_dollar}{log4j.version}</version>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>3.3.0</version>
				<configuration>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
					<archive>
						<manifest>
							<mainClass>${package}.${JavaAID}App</mainClass>
						</manifest>
					</archive>
				</configuration>
				<executions>
					<execution>
						<id>>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.spotify</groupId>
				<artifactId>dockerfile-maven-plugin</artifactId>
				<version>1.4.3</version>
				<executions>
					<execution>
						<id>default</id>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<repository>tiparega/${project}/${project.artifactId}</repository>
					<tag>${project.version}</tag>
					<buildArgs>
						<JAR_FILE>${project.artifactId}-${project.version}-jar-with-dependencies.jar</JAR_FILE>
					</buildArgs>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>